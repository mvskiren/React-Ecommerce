{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.readState = exports.saveState = undefined;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar QuotaExceededErrors = {\n  QuotaExceededError: true,\n  QUOTA_EXCEEDED_ERR: true\n};\nvar SecurityErrors = {\n  SecurityError: true\n};\nvar KeyPrefix = '@@History/';\n\nvar createKey = function createKey(key) {\n  return KeyPrefix + key;\n};\n\nvar saveState = exports.saveState = function saveState(key, state) {\n  if (!window.sessionStorage) {\n    // Session storage is not available or hidden.\n    // sessionStorage is undefined in Internet Explorer when served via file protocol.\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;\n    return;\n  }\n\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key));\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n    }\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;\n      return;\n    }\n\n    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;\n      return;\n    }\n\n    throw error;\n  }\n};\n\nvar readState = exports.readState = function readState(key) {\n  var json = void 0;\n\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;\n      return undefined;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {// Ignore invalid JSON.\n    }\n  }\n\n  return undefined;\n};","map":{"version":3,"sources":["/Users/saikiran/Desktop/Mojo-Ecommerce/react-ecommerce/node_modules/react-router/node_modules/history/lib/DOMStateStorage.js"],"names":["exports","__esModule","readState","saveState","undefined","_warning","require","_warning2","_interopRequireDefault","obj","default","QuotaExceededErrors","QuotaExceededError","QUOTA_EXCEEDED_ERR","SecurityErrors","SecurityError","KeyPrefix","createKey","key","state","window","sessionStorage","process","env","NODE_ENV","removeItem","setItem","JSON","stringify","error","name","length","json","getItem","parse"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.readState = exports.saveState = undefined;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QuotaExceededErrors = {\n  QuotaExceededError: true,\n  QUOTA_EXCEEDED_ERR: true\n};\n\nvar SecurityErrors = {\n  SecurityError: true\n};\n\nvar KeyPrefix = '@@History/';\n\nvar createKey = function createKey(key) {\n  return KeyPrefix + key;\n};\n\nvar saveState = exports.saveState = function saveState(key, state) {\n  if (!window.sessionStorage) {\n    // Session storage is not available or hidden.\n    // sessionStorage is undefined in Internet Explorer when served via file protocol.\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;\n\n    return;\n  }\n\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key));\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n    }\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;\n\n      return;\n    }\n\n    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;\n\n      return;\n    }\n\n    throw error;\n  }\n};\n\nvar readState = exports.readState = function readState(key) {\n  var json = void 0;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;\n\n      return undefined;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return undefined;\n};"]},"metadata":{},"sourceType":"script"}