{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport { loopAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\nimport { matchPattern } from './PatternUtils';\nimport warning from './routerWarning';\nimport { createRoutes } from './RouteUtils';\n\nfunction getChildRoutes(route, location, paramNames, paramValues, callback) {\n  if (route.childRoutes) {\n    return [null, route.childRoutes];\n  }\n\n  if (!route.getChildRoutes) {\n    return [];\n  }\n\n  var sync = true,\n      result = void 0;\n  var partialNextState = {\n    location: location,\n    params: createParams(paramNames, paramValues)\n  };\n  var childRoutesReturn = route.getChildRoutes(partialNextState, function (error, childRoutes) {\n    childRoutes = !error && createRoutes(childRoutes);\n\n    if (sync) {\n      result = [error, childRoutes];\n      return;\n    }\n\n    callback(error, childRoutes);\n  });\n  if (isPromise(childRoutesReturn)) childRoutesReturn.then(function (childRoutes) {\n    return callback(null, createRoutes(childRoutes));\n  }, callback);\n  sync = false;\n  return result; // Might be undefined.\n}\n\nfunction getIndexRoute(route, location, paramNames, paramValues, callback) {\n  if (route.indexRoute) {\n    callback(null, route.indexRoute);\n  } else if (route.getIndexRoute) {\n    var partialNextState = {\n      location: location,\n      params: createParams(paramNames, paramValues)\n    };\n    var indexRoutesReturn = route.getIndexRoute(partialNextState, function (error, indexRoute) {\n      callback(error, !error && createRoutes(indexRoute)[0]);\n    });\n    if (isPromise(indexRoutesReturn)) indexRoutesReturn.then(function (indexRoute) {\n      return callback(null, createRoutes(indexRoute)[0]);\n    }, callback);\n  } else if (route.childRoutes || route.getChildRoutes) {\n    var onChildRoutes = function onChildRoutes(error, childRoutes) {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      var pathless = childRoutes.filter(function (childRoute) {\n        return !childRoute.path;\n      });\n      loopAsync(pathless.length, function (index, next, done) {\n        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {\n          if (error || indexRoute) {\n            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);\n            done(error, routes);\n          } else {\n            next();\n          }\n        });\n      }, function (err, routes) {\n        callback(null, routes);\n      });\n    };\n\n    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);\n\n    if (result) {\n      onChildRoutes.apply(undefined, result);\n    }\n  } else {\n    callback();\n  }\n}\n\nfunction assignParams(params, paramNames, paramValues) {\n  return paramNames.reduce(function (params, paramName, index) {\n    var paramValue = paramValues && paramValues[index];\n\n    if (Array.isArray(params[paramName])) {\n      params[paramName].push(paramValue);\n    } else if (paramName in params) {\n      params[paramName] = [params[paramName], paramValue];\n    } else {\n      params[paramName] = paramValue;\n    }\n\n    return params;\n  }, params);\n}\n\nfunction createParams(paramNames, paramValues) {\n  return assignParams({}, paramNames, paramValues);\n}\n\nfunction matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {\n  var pattern = route.path || '';\n\n  if (pattern.charAt(0) === '/') {\n    remainingPathname = location.pathname;\n    paramNames = [];\n    paramValues = [];\n  } // Only try to match the path if the route actually has a pattern, and if\n  // we're not just searching for potential nested absolute paths.\n\n\n  if (remainingPathname !== null && pattern) {\n    try {\n      var matched = matchPattern(pattern, remainingPathname);\n\n      if (matched) {\n        remainingPathname = matched.remainingPathname;\n        paramNames = [].concat(paramNames, matched.paramNames);\n        paramValues = [].concat(paramValues, matched.paramValues);\n      } else {\n        remainingPathname = null;\n      }\n    } catch (error) {\n      callback(error);\n    } // By assumption, pattern is non-empty here, which is the prerequisite for\n    // actually terminating a match.\n\n\n    if (remainingPathname === '') {\n      var match = {\n        routes: [route],\n        params: createParams(paramNames, paramValues)\n      };\n      getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {\n        if (error) {\n          callback(error);\n        } else {\n          if (Array.isArray(indexRoute)) {\n            var _match$routes;\n\n            process.env.NODE_ENV !== 'production' ? warning(indexRoute.every(function (route) {\n              return !route.path;\n            }), 'Index routes should not have paths') : void 0;\n\n            (_match$routes = match.routes).push.apply(_match$routes, indexRoute);\n          } else if (indexRoute) {\n            process.env.NODE_ENV !== 'production' ? warning(!indexRoute.path, 'Index routes should not have paths') : void 0;\n            match.routes.push(indexRoute);\n          }\n\n          callback(null, match);\n        }\n      });\n      return;\n    }\n  }\n\n  if (remainingPathname != null || route.childRoutes) {\n    // Either a) this route matched at least some of the path or b)\n    // we don't have to load this route's children asynchronously. In\n    // either case continue checking for matches in the subtree.\n    var onChildRoutes = function onChildRoutes(error, childRoutes) {\n      if (error) {\n        callback(error);\n      } else if (childRoutes) {\n        // Check the child routes to see if any of them match.\n        matchRoutes(childRoutes, location, function (error, match) {\n          if (error) {\n            callback(error);\n          } else if (match) {\n            // A child route matched! Augment the match and pass it up the stack.\n            match.routes.unshift(route);\n            callback(null, match);\n          } else {\n            callback();\n          }\n        }, remainingPathname, paramNames, paramValues);\n      } else {\n        callback();\n      }\n    };\n\n    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);\n\n    if (result) {\n      onChildRoutes.apply(undefined, result);\n    }\n  } else {\n    callback();\n  }\n}\n/**\n * Asynchronously matches the given location to a set of routes and calls\n * callback(error, state) when finished. The state object will have the\n * following properties:\n *\n * - routes       An array of routes that matched, in hierarchical order\n * - params       An object of URL parameters\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getChildRoutes method.\n */\n\n\nexport default function matchRoutes(routes, location, callback, remainingPathname) {\n  var paramNames = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var paramValues = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n\n  if (remainingPathname === undefined) {\n    // TODO: This is a little bit ugly, but it works around a quirk in history\n    // that strips the leading slash from pathnames when using basenames with\n    // trailing slashes.\n    if (location.pathname.charAt(0) !== '/') {\n      location = _extends({}, location, {\n        pathname: '/' + location.pathname\n      });\n    }\n\n    remainingPathname = location.pathname;\n  }\n\n  loopAsync(routes.length, function (index, next, done) {\n    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {\n      if (error || match) {\n        done(error, match);\n      } else {\n        next();\n      }\n    });\n  }, callback);\n}","map":{"version":3,"sources":["/Users/saikiran/Desktop/Mojo-Ecommerce/react-ecommerce/node_modules/react-router/es/matchRoutes.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","loopAsync","isPromise","matchPattern","warning","createRoutes","getChildRoutes","route","location","paramNames","paramValues","callback","childRoutes","sync","result","partialNextState","params","createParams","childRoutesReturn","error","then","getIndexRoute","indexRoute","indexRoutesReturn","onChildRoutes","pathless","filter","childRoute","path","index","next","done","routes","concat","Array","isArray","err","apply","undefined","assignParams","reduce","paramName","paramValue","push","matchRouteDeep","remainingPathname","pattern","charAt","pathname","matched","match","_match$routes","process","env","NODE_ENV","every","matchRoutes","unshift"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { loopAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\nimport { matchPattern } from './PatternUtils';\nimport warning from './routerWarning';\nimport { createRoutes } from './RouteUtils';\n\nfunction getChildRoutes(route, location, paramNames, paramValues, callback) {\n  if (route.childRoutes) {\n    return [null, route.childRoutes];\n  }\n  if (!route.getChildRoutes) {\n    return [];\n  }\n\n  var sync = true,\n      result = void 0;\n\n  var partialNextState = {\n    location: location,\n    params: createParams(paramNames, paramValues)\n  };\n\n  var childRoutesReturn = route.getChildRoutes(partialNextState, function (error, childRoutes) {\n    childRoutes = !error && createRoutes(childRoutes);\n    if (sync) {\n      result = [error, childRoutes];\n      return;\n    }\n\n    callback(error, childRoutes);\n  });\n\n  if (isPromise(childRoutesReturn)) childRoutesReturn.then(function (childRoutes) {\n    return callback(null, createRoutes(childRoutes));\n  }, callback);\n\n  sync = false;\n  return result; // Might be undefined.\n}\n\nfunction getIndexRoute(route, location, paramNames, paramValues, callback) {\n  if (route.indexRoute) {\n    callback(null, route.indexRoute);\n  } else if (route.getIndexRoute) {\n    var partialNextState = {\n      location: location,\n      params: createParams(paramNames, paramValues)\n    };\n\n    var indexRoutesReturn = route.getIndexRoute(partialNextState, function (error, indexRoute) {\n      callback(error, !error && createRoutes(indexRoute)[0]);\n    });\n\n    if (isPromise(indexRoutesReturn)) indexRoutesReturn.then(function (indexRoute) {\n      return callback(null, createRoutes(indexRoute)[0]);\n    }, callback);\n  } else if (route.childRoutes || route.getChildRoutes) {\n    var onChildRoutes = function onChildRoutes(error, childRoutes) {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      var pathless = childRoutes.filter(function (childRoute) {\n        return !childRoute.path;\n      });\n\n      loopAsync(pathless.length, function (index, next, done) {\n        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {\n          if (error || indexRoute) {\n            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);\n            done(error, routes);\n          } else {\n            next();\n          }\n        });\n      }, function (err, routes) {\n        callback(null, routes);\n      });\n    };\n\n    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);\n    if (result) {\n      onChildRoutes.apply(undefined, result);\n    }\n  } else {\n    callback();\n  }\n}\n\nfunction assignParams(params, paramNames, paramValues) {\n  return paramNames.reduce(function (params, paramName, index) {\n    var paramValue = paramValues && paramValues[index];\n\n    if (Array.isArray(params[paramName])) {\n      params[paramName].push(paramValue);\n    } else if (paramName in params) {\n      params[paramName] = [params[paramName], paramValue];\n    } else {\n      params[paramName] = paramValue;\n    }\n\n    return params;\n  }, params);\n}\n\nfunction createParams(paramNames, paramValues) {\n  return assignParams({}, paramNames, paramValues);\n}\n\nfunction matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {\n  var pattern = route.path || '';\n\n  if (pattern.charAt(0) === '/') {\n    remainingPathname = location.pathname;\n    paramNames = [];\n    paramValues = [];\n  }\n\n  // Only try to match the path if the route actually has a pattern, and if\n  // we're not just searching for potential nested absolute paths.\n  if (remainingPathname !== null && pattern) {\n    try {\n      var matched = matchPattern(pattern, remainingPathname);\n      if (matched) {\n        remainingPathname = matched.remainingPathname;\n        paramNames = [].concat(paramNames, matched.paramNames);\n        paramValues = [].concat(paramValues, matched.paramValues);\n      } else {\n        remainingPathname = null;\n      }\n    } catch (error) {\n      callback(error);\n    }\n\n    // By assumption, pattern is non-empty here, which is the prerequisite for\n    // actually terminating a match.\n    if (remainingPathname === '') {\n      var match = {\n        routes: [route],\n        params: createParams(paramNames, paramValues)\n      };\n\n      getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {\n        if (error) {\n          callback(error);\n        } else {\n          if (Array.isArray(indexRoute)) {\n            var _match$routes;\n\n            process.env.NODE_ENV !== 'production' ? warning(indexRoute.every(function (route) {\n              return !route.path;\n            }), 'Index routes should not have paths') : void 0;\n            (_match$routes = match.routes).push.apply(_match$routes, indexRoute);\n          } else if (indexRoute) {\n            process.env.NODE_ENV !== 'production' ? warning(!indexRoute.path, 'Index routes should not have paths') : void 0;\n            match.routes.push(indexRoute);\n          }\n\n          callback(null, match);\n        }\n      });\n\n      return;\n    }\n  }\n\n  if (remainingPathname != null || route.childRoutes) {\n    // Either a) this route matched at least some of the path or b)\n    // we don't have to load this route's children asynchronously. In\n    // either case continue checking for matches in the subtree.\n    var onChildRoutes = function onChildRoutes(error, childRoutes) {\n      if (error) {\n        callback(error);\n      } else if (childRoutes) {\n        // Check the child routes to see if any of them match.\n        matchRoutes(childRoutes, location, function (error, match) {\n          if (error) {\n            callback(error);\n          } else if (match) {\n            // A child route matched! Augment the match and pass it up the stack.\n            match.routes.unshift(route);\n            callback(null, match);\n          } else {\n            callback();\n          }\n        }, remainingPathname, paramNames, paramValues);\n      } else {\n        callback();\n      }\n    };\n\n    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);\n    if (result) {\n      onChildRoutes.apply(undefined, result);\n    }\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously matches the given location to a set of routes and calls\n * callback(error, state) when finished. The state object will have the\n * following properties:\n *\n * - routes       An array of routes that matched, in hierarchical order\n * - params       An object of URL parameters\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getChildRoutes method.\n */\nexport default function matchRoutes(routes, location, callback, remainingPathname) {\n  var paramNames = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var paramValues = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n\n  if (remainingPathname === undefined) {\n    // TODO: This is a little bit ugly, but it works around a quirk in history\n    // that strips the leading slash from pathnames when using basenames with\n    // trailing slashes.\n    if (location.pathname.charAt(0) !== '/') {\n      location = _extends({}, location, {\n        pathname: '/' + location.pathname\n      });\n    }\n    remainingPathname = location.pathname;\n  }\n\n  loopAsync(routes.length, function (index, next, done) {\n    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {\n      if (error || match) {\n        done(error, match);\n      } else {\n        next();\n      }\n    });\n  }, callback);\n}"]},"metadata":{},"sourceType":"module"}