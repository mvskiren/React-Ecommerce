{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\n\nfunction isValidChild(object) {\n  return object == null || React.isValidElement(object);\n}\n\nexport function isReactChildren(object) {\n  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);\n}\n\nfunction createRoute(defaultProps, props) {\n  return _extends({}, defaultProps, props);\n}\n\nexport function createRouteFromReactElement(element) {\n  var type = element.type;\n  var route = createRoute(type.defaultProps, element.props);\n\n  if (route.children) {\n    var childRoutes = createRoutesFromReactChildren(route.children, route);\n    if (childRoutes.length) route.childRoutes = childRoutes;\n    delete route.children;\n  }\n\n  return route;\n}\n/**\n * Creates and returns a routes object from the given ReactChildren. JSX\n * provides a convenient way to visualize how routes in the hierarchy are\n * nested.\n *\n *   import { Route, createRoutesFromReactChildren } from 'react-router'\n *\n *   const routes = createRoutesFromReactChildren(\n *     <Route component={App}>\n *       <Route path=\"home\" component={Dashboard}/>\n *       <Route path=\"news\" component={NewsFeed}/>\n *     </Route>\n *   )\n *\n * Note: This method is automatically used when you provide <Route> children\n * to a <Router> component.\n */\n\nexport function createRoutesFromReactChildren(children, parentRoute) {\n  var routes = [];\n  React.Children.forEach(children, function (element) {\n    if (React.isValidElement(element)) {\n      // Component classes may have a static create* method.\n      if (element.type.createRouteFromReactElement) {\n        var route = element.type.createRouteFromReactElement(element, parentRoute);\n        if (route) routes.push(route);\n      } else {\n        routes.push(createRouteFromReactElement(element));\n      }\n    }\n  });\n  return routes;\n}\n/**\n * Creates and returns an array of routes from the given object which\n * may be a JSX route, a plain object route, or an array of either.\n */\n\nexport function createRoutes(routes) {\n  if (isReactChildren(routes)) {\n    routes = createRoutesFromReactChildren(routes);\n  } else if (routes && !Array.isArray(routes)) {\n    routes = [routes];\n  }\n\n  return routes;\n}","map":{"version":3,"sources":["/Users/saikiran/Desktop/Mojo-Ecommerce/react-ecommerce/node_modules/react-router/es/RouteUtils.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","isValidChild","object","isValidElement","isReactChildren","Array","isArray","every","createRoute","defaultProps","props","createRouteFromReactElement","element","type","route","children","childRoutes","createRoutesFromReactChildren","parentRoute","routes","Children","forEach","push","createRoutes"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport React from 'react';\n\nfunction isValidChild(object) {\n  return object == null || React.isValidElement(object);\n}\n\nexport function isReactChildren(object) {\n  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);\n}\n\nfunction createRoute(defaultProps, props) {\n  return _extends({}, defaultProps, props);\n}\n\nexport function createRouteFromReactElement(element) {\n  var type = element.type;\n  var route = createRoute(type.defaultProps, element.props);\n\n  if (route.children) {\n    var childRoutes = createRoutesFromReactChildren(route.children, route);\n\n    if (childRoutes.length) route.childRoutes = childRoutes;\n\n    delete route.children;\n  }\n\n  return route;\n}\n\n/**\n * Creates and returns a routes object from the given ReactChildren. JSX\n * provides a convenient way to visualize how routes in the hierarchy are\n * nested.\n *\n *   import { Route, createRoutesFromReactChildren } from 'react-router'\n *\n *   const routes = createRoutesFromReactChildren(\n *     <Route component={App}>\n *       <Route path=\"home\" component={Dashboard}/>\n *       <Route path=\"news\" component={NewsFeed}/>\n *     </Route>\n *   )\n *\n * Note: This method is automatically used when you provide <Route> children\n * to a <Router> component.\n */\nexport function createRoutesFromReactChildren(children, parentRoute) {\n  var routes = [];\n\n  React.Children.forEach(children, function (element) {\n    if (React.isValidElement(element)) {\n      // Component classes may have a static create* method.\n      if (element.type.createRouteFromReactElement) {\n        var route = element.type.createRouteFromReactElement(element, parentRoute);\n\n        if (route) routes.push(route);\n      } else {\n        routes.push(createRouteFromReactElement(element));\n      }\n    }\n  });\n\n  return routes;\n}\n\n/**\n * Creates and returns an array of routes from the given object which\n * may be a JSX route, a plain object route, or an array of either.\n */\nexport function createRoutes(routes) {\n  if (isReactChildren(routes)) {\n    routes = createRoutesFromReactChildren(routes);\n  } else if (routes && !Array.isArray(routes)) {\n    routes = [routes];\n  }\n\n  return routes;\n}"]},"metadata":{},"sourceType":"module"}