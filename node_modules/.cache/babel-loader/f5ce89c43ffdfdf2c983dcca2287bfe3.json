{"ast":null,"code":"import { mapAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if (isPromise(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\n\n\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexport default getComponents;","map":{"version":3,"sources":["/Users/saikiran/Desktop/Mojo-Ecommerce/react-ecommerce/node_modules/react-router/es/getComponents.js"],"names":["mapAsync","isPromise","getComponentsForRoute","nextState","route","callback","component","components","getComponent","getComponents","componentReturn","call","then","routes","index"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,QAAjD,EAA2D;AACzD,MAAID,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,UAA7B,EAAyC;AACvCF,IAAAA,QAAQ,CAAC,IAAD,EAAOD,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,UAAhC,CAAR;AACA;AACD;;AAED,MAAIC,YAAY,GAAGJ,KAAK,CAACI,YAAN,IAAsBJ,KAAK,CAACK,aAA/C;;AACA,MAAID,YAAJ,EAAkB;AAChB,QAAIE,eAAe,GAAGF,YAAY,CAACG,IAAb,CAAkBP,KAAlB,EAAyBD,SAAzB,EAAoCE,QAApC,CAAtB;AACA,QAAIJ,SAAS,CAACS,eAAD,CAAb,EAAgCA,eAAe,CAACE,IAAhB,CAAqB,UAAUN,SAAV,EAAqB;AACxE,aAAOD,QAAQ,CAAC,IAAD,EAAOC,SAAP,CAAf;AACD,KAF+B,EAE7BD,QAF6B;AAGjC,GALD,MAKO;AACLA,IAAAA,QAAQ;AACT;AACF;AAED;;;;;;;;;AAOA,SAASI,aAAT,CAAuBN,SAAvB,EAAkCE,QAAlC,EAA4C;AAC1CL,EAAAA,QAAQ,CAACG,SAAS,CAACU,MAAX,EAAmB,UAAUT,KAAV,EAAiBU,KAAjB,EAAwBT,QAAxB,EAAkC;AAC3DH,IAAAA,qBAAqB,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,CAArB;AACD,GAFO,EAELA,QAFK,CAAR;AAGD;;AAED,eAAeI,aAAf","sourcesContent":["import { mapAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if (isPromise(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexport default getComponents;"]},"metadata":{},"sourceType":"module"}